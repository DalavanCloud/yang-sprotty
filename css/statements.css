/*
 * Copyright (C) 2017 TypeFox and others.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 */


/* sprotty SVG export */

.module circle.tag,
.module .comp text.classHeader {
    fill: var(--yang-module-header-fg)   
}
.module .comp rect,
.module text.tag {
    fill: var(--yang-module-header-bg)
}
.module {
    fill: var(--yang-module-comp-bg)
}
.module .comp .text.label {
    fill: var(--yang-module-comp-fg)
}
.moduleNode {
    stroke: var(--yang-module-stroke)
}

.list circle.tag,
.list .comp text.classHeader {
    fill: var(--yang-list-header-fg)   
}
.list .comp rect,
.list text.tag {
    fill: var(--yang-list-header-bg)
}
.list {
    fill: var(--yang-list-comp-bg)
}
.list .comp .text.label {
    fill: var(--yang-list-comp-fg)
}
.list {
    stroke: var(--yang-list-stroke)
}

.container circle.tag,
.container .comp text.classHeader {
    fill: var(--yang-container-header-fg)   
}
.container .comp rect,
.container text.tag {
    fill: var(--yang-container-header-bg)
}
.container {
    fill: var(--yang-container-comp-bg)
}
.container .comp .text.label {
    fill: var(--yang-container-comp-fg)
}
.container {
    stroke: var(--yang-container-stroke)
}

.augment circle.tag,
.augment .comp text.classHeader {
    fill: var(--yang-augment-header-fg)   
}
.augment .comp rect,
.augment text.tag {
    fill: var(--yang-augment-header-bg)
}
.augment {
    fill: var(--yang-augment-comp-bg)
}
.augment .comp .text.label {
    fill: var(--yang-augment-comp-fg)
}
.augment {
    stroke: var(--yang-augment-stroke)
}

.grouping circle.tag,
.grouping .comp text.classHeader {
    fill: var(--yang-grouping-header-fg)   
}
.grouping .comp rect,
.grouping text.tag {
    fill: var(--yang-grouping-header-bg)
}
.grouping {
    fill: var(--yang-grouping-comp-bg)
}
.grouping .comp .text.label {
    fill: var(--yang-grouping-comp-fg)
}
.grouping {
    stroke: var(--yang-grouping-stroke)
}

.choice,
.case {
    fill: var(--yang-choice-bg);
    stroke: var(--yang-choice-stroke);
}

.rpc text {
    fill: var(--yang-rpc-header-fg)   
}
.rpc rect {
    fill: var(--yang-rpc-header-bg)
}
.rpc {
    stroke: var(--yang-rpc-stroke)
}

.action text {
    fill: var(--yang-action-header-fg)   
}
.action rect {
    fill: var(--yang-action-header-bg)
}
.action {
    stroke: var(--yang-action-stroke)
}

.input circle.tag,
.input .comp text.classHeader {
    fill: var(--yang-input-header-fg)   
}
.input .comp rect,
.input text.tag {
    fill: var(--yang-input-header-bg)
}
.input {
    fill: var(--yang-input-comp-bg)
}
.input .comp .text.label {
    fill: var(--yang-input-comp-fg)
}
.input {
    stroke: var(--yang-input-stroke)
}


.output circle.tag,
.output .comp text.classHeader {
    fill: var(--yang-output-header-fg)   
}
.output .comp rect,
.output text.tag {
    fill: var(--yang-output-header-bg)
}
.output {
    fill: var(--yang-output-comp-bg)
}
.output .comp .text.label {
    fill: var(--yang-output-comp-fg)
}
.output {
    stroke: var(--yang-output-stroke)
}

.output text.tag,
.input text.tag {
    font-size: 0.6em;
}

.notification circle.tag,
.notification .comp text.classHeader {
    fill: var(--yang-notification-header-fg)   
}
.notification .comp rect,
.notification text.tag {
    fill: var(--yang-notification-header-bg)
}
.notification {
    fill: var(--yang-notification-comp-bg)
}
.notification .comp .text.label {
    fill: var(--yang-notification-comp-fg)
}
.notification {
    stroke: var(--yang-notification-stroke)
}

.uses {
    fill: var(--yang-uses-bg);
    stroke: var(--yang-uses-stroke);
}

.identity circle.tag,
.identity .comp text.classHeader {
    fill: var(--yang-identity-header-fg)   
}
.identity .comp rect,
.identity text.tag {
    fill: var(--yang-identity-header-bg)
}
.identity {
    stroke: var(--yang-identity-stroke)
}

.typedef circle.tag,
.typedef .comp text.classHeader {
    fill: var(--yang-typedef-header-fg)   
}
.typedef .comp rect,
.typedef text.tag {
    fill: var(--yang-typedef-header-bg)
}
.typedef {
    stroke: var(--yang-typedef-stroke)
}

text.classHeader {
    font-size: 0.8em;
}

.label {
    font-size: 0.6em;
}

.tag {
    font-size: 0.9em;
    font-weight: bold;
    stroke: none;
    text-anchor: middle;
    dominant-baseline: central;
}
